/*
 * Stats API for the Battlefield series
 *
 * This project also has a <a href=\"https://top.gg/bot/714524944783900794\" target=\"_blank\">Discord bot</a>, allowing anyone in your server to check their Battlefield stats via simple commands.<br><br>Language tags (lang) for both Battlefield 1 and Battlefield 5 are based on <a href=\"https://www.oracle.com/java/technologies/javase/jdk8-jre8-suported-locales.html\" target=\"_blank\">Java 8 language tags.</a> (response keys do not change based on the language tags, only the values do).<br><br>Data for Battlefield 2 is retrieved from the two revive projects: <a href=\"https://www.bf2hub.com\" target=\"_blank\">BF2Hub</a> and <a href=\"https://playbf2.tilda.ws/en\" target=\"_blank\">PlayBF2</a>.<br><br>Data for Battlefield 2142 is retrieved from the <a href=\"https://battlefield2142.co/\" target=\"_blank\">BF2142 Reclamation</a> project.<br><br>All other titles are still managed by EA/Dice.<br><br>If you discover any issues or have suggestions for new features, post them in the Community Network Discord: <a href=\"https://discord.gg/zMuxW6c\" target=\"_blank\">discord.gg/zMuxW6c</a>.<br><br>If you want to support the project, consider <a href=\"https://github.com/sponsors/community-network\" target=\"_blank\">becoming a sponsor on GitHub</a>.
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlatoonServer {
    #[serde(rename = "prefix")]
    pub prefix: String,
    #[serde(rename = "serverInfo")]
    pub server_info: String,
    #[serde(rename = "inQue")]
    pub in_que: i32,
    #[serde(rename = "smallMode")]
    pub small_mode: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "mode")]
    pub mode: String,
    #[serde(rename = "currentMap")]
    pub current_map: String,
    #[serde(rename = "playerAmount")]
    pub player_amount: i32,
    #[serde(rename = "maxPlayerAmount")]
    pub max_player_amount: i32,
    #[serde(rename = "official")]
    pub official: bool,
    #[serde(rename = "ownerId")]
    pub owner_id: i32,
    #[serde(rename = "gameId")]
    pub game_id: String,
    #[serde(rename = "region")]
    pub region: String,
    #[serde(rename = "platform")]
    pub platform: String,
}

impl PlatoonServer {
    pub fn new(prefix: String, server_info: String, in_que: i32, small_mode: String, url: String, mode: String, current_map: String, player_amount: i32, max_player_amount: i32, official: bool, owner_id: i32, game_id: String, region: String, platform: String) -> PlatoonServer {
        PlatoonServer {
            prefix,
            server_info,
            in_que,
            small_mode,
            url,
            mode,
            current_map,
            player_amount,
            max_player_amount,
            official,
            owner_id,
            game_id,
            region,
            platform,
        }
    }
}

